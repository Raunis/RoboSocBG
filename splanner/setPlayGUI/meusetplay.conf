(setplay :name meusetplay :id 5 :invertible true
	 :version splanner_1.5
	 :players
		(list
			(playerRole :roleName Player7)
			(playerRole :roleName Player8)
			(playerRole :roleName Player9)
		) 
	 :abortCond (or (bowner :players  (list (player :team opp :number 1) (player :team opp :number 2) (player :team opp :number 3) (player :team opp :number 4) (player :team opp :number 5) (player :team opp :number 6) (player :team opp :number 7) (player :team opp :number 8) (player :team opp :number 9) (player :team opp :number 10) (player :team opp :number 11) )) (and (not (playm play_on)) (not (playm ko_our))))
	 :steps
		(seq
			(step :id 0 :waitTime 0 :abortTime 22
				 :participants
					(list
						(at (playerRole :roleName Player7) (pt :x 0 :y 0))
						(at (playerRole :roleName Player8) (pt :x -5.5 :y -0.5))
						(at (playerRole :roleName Player9) (pt :x -2 :y -6.5))
					)
				 :condition (playm ko_our)
				 :leadPlayer (playerRole :roleName Player7)
				 :transitions
					(list 
						(nextStep :id 1
							 :condition (canPassPl :from  (list (playerRole :roleName Player7) ) :to (list (playerRole :roleName Player8) ))
							 :directives
								(list
									(do 	:players (list (playerRole :roleName Player7) )
										:actions (list (bto :region (pt :x -5.5 :y -0.5) :type normal) )
									)
									(do 	:players (list (playerRole :roleName Player8) )
										:actions (list (intercept) (pos :region (pt :x -5.5 :y -0.5)) )
									)

								)
						)
					)
			)
			(step :id 1 :waitTime 0 :abortTime 23
				 :participants
					(list
						(at (playerRole :roleName Player8) (pt :x -5.5 :y -0.5))
						(at (playerRole :roleName Player9) (pt :x -2 :y -6.5))
					)
				 :condition (and (playm play_on) (bowner :players  (list (playerRole :roleName Player8) )))
				 :leadPlayer (playerRole :roleName Player8)
				 :transitions
					(list 
						(nextStep :id 2
							 :condition (canPassPl :from  (list (playerRole :roleName Player8) ) :to (list (playerRole :roleName Player9) ))
							 :directives
								(list
									(do 	:players (list (playerRole :roleName Player9) )
										:actions (list (intercept) (pos :region (pt :x -2 :y -6.5)) )
									)
									(do 	:players (list (playerRole :roleName Player8) )
										:actions (list (bto :region (pt :x -2 :y -6.5) :type normal) )
									)

								)
						)
					)
			)
			(step :id 2 :waitTime 0 :abortTime 0
				 :participants
					(list
						(at (playerRole :roleName Player7) (pt :x 0 :y 0))
						(at (playerRole :roleName Player8) (pt :x -5.5 :y -0.5))
						(at (playerRole :roleName Player9) (pt :x -2 :y -6.5))
					)
				 :condition (and (playm play_on) (bowner :players  (list (playerRole :roleName Player9) )))
				 :leadPlayer (playerRole :roleName Player9)
				 :transitions
					(list 
						(finish :directives (list))
					)
			)
		)
)
